/**
 * Rocket Interplanet API
 * Rocket api
 *
 * OpenAPI spec version: 1.0.0
 * Contact: abjonathan@hotmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.api

import io.swagger.client.model.InlineResponse2004
import io.swagger.client.model.InlineResponse2005
import io.swagger.client.model.Rocket
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object RocketApi {

  /**
   * get rockets company
   * 
   * Expected answers:
   *   code 200 : Any (result)
   * 
   * Available security schemes:
   *   Bearer (apiKey)
   * 
   * @param companyId 
   */
  def rocketCompanyIdGet(companyId: String)(implicit apiKey: ApiKeyValue): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.GET, "https://virtserver.swaggerhub.com/abjona/RocketInterplantetApi/1.0.0", "/rocket/{companyId}", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withPathParam("companyId", companyId)
      .withSuccessResponse[Any](200)
        /**
   * get all rockets
   * 
   * Expected answers:
   *   code 200 : Any (result)
   * 
   * Available security schemes:
   *   Bearer (apiKey)
   */
  def rocketGetAllGet()(implicit apiKey: ApiKeyValue): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.GET, "https://virtserver.swaggerhub.com/abjona/RocketInterplantetApi/1.0.0", "/rocket/getAll", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withSuccessResponse[Any](200)
        /**
   * store rocket
   * 
   * Expected answers:
   *   code 200 : InlineResponse2004 (result)
   * 
   * Available security schemes:
   *   Bearer (apiKey)
   * 
   * @param companyInfo 
   */
  def rocketStorePost(companyInfo: Option[Rocket] = None)(implicit apiKey: ApiKeyValue): ApiRequest[InlineResponse2004] =
    ApiRequest[InlineResponse2004](ApiMethods.POST, "https://virtserver.swaggerhub.com/abjona/RocketInterplantetApi/1.0.0", "/rocket/store", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withBody(companyInfo)
      .withSuccessResponse[InlineResponse2004](200)
        /**
   * update rocket
   * 
   * Expected answers:
   *   code 200 : InlineResponse2005 (result)
   * 
   * Available security schemes:
   *   Bearer (apiKey)
   * 
   * @param rocketInfo 
   */
  def rocketUpdatePut(rocketInfo: Option[Rocket] = None)(implicit apiKey: ApiKeyValue): ApiRequest[InlineResponse2005] =
    ApiRequest[InlineResponse2005](ApiMethods.PUT, "https://virtserver.swaggerhub.com/abjona/RocketInterplantetApi/1.0.0", "/rocket/update", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withBody(rocketInfo)
      .withSuccessResponse[InlineResponse2005](200)
      

}

